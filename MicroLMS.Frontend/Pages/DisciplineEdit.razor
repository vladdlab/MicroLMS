@page "/disciplines/{DisciplineId:guid}/edit"
@using MicroLMS.Domain
@inject HttpClient _http
@inject NavigationManager _myNavigationManager

@if (_discipline == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <section class="container mb-5">
        <h1 class="title h3">Редактирование дисциплины</h1>
        <EditForm Model="@_discipline">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="mb-3">
                <label class="form-label" for="discipline-name">Название дисциплины:</label>
                <InputText class="form-control" id="discipline-name" @bind-Value="_discipline.Name"></InputText>
            </div>
            <div class="d-flex justify-content-end">
                <button class="btn btn-success" @onclick="@UpdateDiscipline">Сохранить опрос</button>
            </div>
        </EditForm>
    </section>
}

@code {
    [Parameter]
    public Guid DisciplineId { get; set; }

    private Discipline _discipline;

    protected override async Task OnInitializedAsync()
    {
        _discipline = await _http.GetFromJsonAsync<Discipline>("/api/Discipline/" + DisciplineId);
    }

    private async Task UpdateDiscipline()
    {
        var response = await _http.PutAsJsonAsync("/api/Discipline/" + _discipline.Id, _discipline);
        _discipline = await response.Content.ReadFromJsonAsync<Discipline>() ?? throw new InvalidOperationException();
        _myNavigationManager.NavigateTo("/disciplines/" + _discipline.Id);
    }

}