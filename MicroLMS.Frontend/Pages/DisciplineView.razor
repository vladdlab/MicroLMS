@page "/disciplines/{DisciplineId:guid}"
@using MicroLMS.Domain
@inject HttpClient _http

<PageTitle>Дисциплина</PageTitle>

@if (_discipline == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <section class="container">
        <div class="d-flex mb-3 align-items-center">
            <h1 class="h3">@_discipline.Name</h1>
            <NavLink class="ms-auto" href="@($"disciplines/{_discipline.Id}/edit")">
                <button class="btn btn-primary">Редактировать</button>
            </NavLink>
            <NavLink class="ms-2" href="@($"disciplines/{_discipline.Id}/createSession")">
                <button class="btn btn-primary">Добавить занятие</button>
            </NavLink>
        </div>
        @if (_discipline.Sessions == null || _discipline.Sessions.Count == 0)
        {
            <div class="row align-items-center text-center list-placeholder">
                <p class="h2 text-muted">Список пуст...</p>
            </div>
        }
        else
        {
            <table class="table">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Название</th>
                    <th scope="col">Действия</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var session in _discipline.Sessions)
                {

                    <tr style="cursor: pointer;">
                        <th scope="row" style="width: 0" onclick="location.href='/api/Session/' + @session.Id">@session.Id.ToString().Substring(0, 5)</th>
                        <td onclick="location.href='/api/Session/' + @session.Id">@session.Name</td>
                        <td style="width: 0">
                            <div class="d-flex justify-content-end">
                                <NavLink class="ms-auto" href="@($"/disciplines/{_discipline.Id}/sessions/{session.Id}/edit")">
                                    <button class="btn btn-secondary me-1">
                                        <span class="oi oi-pencil" aria-hidden="true"></span>
                                    </button>
                                </NavLink>
                                <button class="btn btn-danger" @onclick="@(e => RemoveSession(@session))">
                                    <span class="oi oi-delete" aria-hidden="true"></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>


        }
    </section>
}    

@code {
    
    [Parameter]
    public Guid DisciplineId { get; set; }

    private Discipline _discipline;

    protected override async Task OnInitializedAsync()
    {
        _discipline = await _http.GetFromJsonAsync<Discipline>("/api/Discipline/" + DisciplineId);
    }
    public class Discipline :Domain.Discipline
    {
         public string Url => "disciplines/" + Id;
         public string ShortId => Id.ToString().Substring(0, 5);
    }
    
    // public class Session :Domain.Session
    // {
    //     public string Url => "/api/Session/" + Id;
    //     public string ShortId => Id.ToString().Substring(0, 5);
    // }
    
    private async Task RemoveSession(Session session)
    {
        await _http.DeleteAsync("/api/Discipline/" + session.Id);
        if (_discipline != null) _discipline.Sessions.Remove(session);
    }
}